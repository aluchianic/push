"use strict";const subscriptionButton=document.getElementById("subscriptionButton");function urlBase64ToUint8Array(t){const e=(t+"=".repeat((4-t.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),i=window.atob(e),n=new Uint8Array(i.length);for(let t=0;t<i.length;++t)n[t]=i.charCodeAt(t);return n}async function subscribe(){const t=await navigator.serviceWorker.ready,e=await fetch("./vapidPublicKey"),i=urlBase64ToUint8Array(await e.text()),n=await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:i});return console.log("Subscribed",n.endpoint),await fetch("register",{method:"post",headers:{"Content-type":"application/json"},body:JSON.stringify({subscription:n})}),setUnsubscribeButton()}async function unsubscribe(){const t=await navigator.serviceWorker.ready,e=await t.pushManager.getSubscription();if(e)return await e.unsubscribe(),console.log("Unsubscribed",e.endpoint),await fetch("unregister",{method:"post",headers:{"Content-type":"application/json"},body:JSON.stringify({subscription:e})}),setSubscribeButton();console.error("[unsubscribe] registration.pushManager.getSubscription() return null subscription. Exiting...")}async function setSubscribeButton(){subscriptionButton.onclick=await subscribe,subscriptionButton.textContent="Subscribe!"}async function setUnsubscribeButton(){subscriptionButton.onclick=await unsubscribe,subscriptionButton.textContent="Unsubscribe!"}const app=(async()=>{let t=null;if("Notification"in window)if("serviceWorker"in navigator){console.log("Service Worker and Push is supported"),t=await navigator.serviceWorker.register("sw.js");const e=await navigator.serviceWorker.ready;console.log("service worker registered",t),subscriptionButton.removeAttribute("disabled");const i=await e.pushManager.getSubscription();i?(console.log("Already subscribed",i.endpoint),await setUnsubscribeButton()):await setSubscribeButton()}else console.warn("Push messaging is not supported");else console.log("[Notification Service] Notifications not supported in this browser")})();//# sourceMappingURL=index.cjs.js.map
