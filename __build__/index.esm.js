const e=document.getElementById("subscriptionButton");async function t(){const e=await navigator.serviceWorker.ready,t=await fetch("./vapidPublicKey"),i=function(e){const t=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),i=window.atob(t),n=new Uint8Array(i.length);for(let e=0;e<i.length;++e)n[e]=i.charCodeAt(e);return n}(await t.text()),n=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:i});return console.log("Subscribed",n.endpoint),await fetch("register",{method:"post",headers:{"Content-type":"application/json"},body:JSON.stringify({subscription:n})}),o()}async function i(){const e=await navigator.serviceWorker.ready,t=await e.pushManager.getSubscription();if(t)return await t.unsubscribe(),console.log("Unsubscribed",t.endpoint),await fetch("unregister",{method:"post",headers:{"Content-type":"application/json"},body:JSON.stringify({subscription:t})}),n();console.error("[unsubscribe] registration.pushManager.getSubscription() return null subscription. Exiting...")}async function n(){e.onclick=await t,e.textContent="Subscribe!"}async function o(){e.onclick=await i,e.textContent="Unsubscribe!"}(async()=>{let t=null;if("Notification"in window)if("serviceWorker"in navigator){console.log("Service Worker and Push is supported"),t=await navigator.serviceWorker.register("sw.js");const i=await navigator.serviceWorker.ready;console.log("service worker registered",t),e.removeAttribute("disabled");const r=await i.pushManager.getSubscription();r?(console.log("Already subscribed",r.endpoint),await o()):await n()}else console.warn("Push messaging is not supported");else console.log("[Notification Service] Notifications not supported in this browser")})();//# sourceMappingURL=index.esm.js.map
